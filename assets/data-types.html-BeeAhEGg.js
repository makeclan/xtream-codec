import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,a as d,d as n,e,b as r,w as s,r as l,o as i}from"./app-C8JBMu7V.js";const h={};function p(u,t){const o=l("RouteLink");return i(),c("div",null,[t[5]||(t[5]=d('<h1 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型"><span>数据类型</span></a></h1><h2 id="_1-整数类型" tabindex="-1"><a class="header-anchor" href="#_1-整数类型"><span>1.整数类型</span></a></h2><table><thead><tr><th>长度</th><th>符号位</th><th>JavaType</th><th>Rust风格注解</th><th>JT风格注解</th></tr></thead><tbody><tr><td>1</td><td>无</td><td><code>byte/Byte</code></td><td><code>@Preset.RustStyle.u8</code></td><td><code>@Preset.JtStyle.Byte</code></td></tr><tr><td>1</td><td><em>有</em></td><td><code>short/Short</code></td><td><code>@Preset.RustStyle.i8</code></td><td>--</td></tr><tr><td>2</td><td>无</td><td><code>short/Short</code></td><td><code>@Preset.RustStyle.u16</code></td><td><code>@Preset.JtStyle.WORD</code></td></tr><tr><td>2</td><td><em>有</em></td><td><code>int/Integer</code></td><td><code>@Preset.RustStyle.i16</code></td><td>--</td></tr><tr><td>4</td><td>无</td><td><code>int/Integer</code></td><td><code>@Preset.RustStyle.u32</code></td><td><code>@Preset.JtStyle.DWORD</code></td></tr><tr><td>4</td><td><em>有</em></td><td><code>long/Long</code></td><td><code>@Preset.RustStyle.i32</code></td><td>--</td></tr><tr><td>8</td><td>无</td><td><code>long/Long</code></td><td><code>@Preset.RustStyle.u64</code></td><td>--</td></tr></tbody></table><h2 id="_2-字符串类型" tabindex="-1"><a class="header-anchor" href="#_2-字符串类型"><span>2.字符串类型</span></a></h2><h3 id="字符串长度" tabindex="-1"><a class="header-anchor" href="#字符串长度"><span>字符串长度</span></a></h3><p>上面提到的整数类型，其大小(字节数)数是固定的。但是对字符串而言，必须手动指定其长度。</p>',6)),n("p",null,[t[1]||(t[1]=e("底层注解 ")),r(o,{to:"/guide/core/annotation-driven/xtream-field-annotation.html"},{default:s(()=>t[0]||(t[0]=[e("@XtreamField")])),_:1,__:[0]}),t[2]||(t[2]=e(" 提供了下面两个属性来指定字符串的长度："))]),t[6]||(t[6]=d('<ul><li><code>int length()</code> : 指定固定的长度</li><li><code>String lengthExpression()</code> : 通过 <code>SpEL</code> 表达式动态计算长度</li></ul><h3 id="字符串编码" tabindex="-1"><a class="header-anchor" href="#字符串编码"><span>字符串编码</span></a></h3><ul><li>编码: <code>UTF-8</code><ul><li><strong>Rust 风格 注解</strong>: <code>@Preset.RustStyle.str(length = 8)</code></li><li><strong>JT 风格注解</strong>: <code>@Preset.JtStyle.Str(length = 8, charset = &quot;GBK&quot;)</code></li></ul></li><li>编码: <code>GBK</code><ul><li><strong>Rust 风格 注解</strong>: <code>@Preset.RustStyle.str(length = 8, charset = &quot;GBK&quot;)</code></li><li><strong>JT 风格注解</strong>: <code>@Preset.JtStyle.Str(length = 8)</code></li></ul></li><li>编码: <code>BCD_8421</code><ul><li><strong>Rust 风格 注解</strong>: <code>@Preset.RustStyle.str(charset = &quot;bcd_8421&quot;, length = 8)</code></li><li><strong>JT 风格注解</strong>: <code>@Preset.JtStyle.Bcd(length = 8)</code></li></ul></li></ul>',3)),n("p",null,[t[4]||(t[4]=e("更多使用示例，请参考 ")),r(o,{to:"/guide/core/samples/custom-protocol-sample-01/flatten-style-demo.html"},{default:s(()=>t[3]||(t[3]=[e("示例")])),_:1,__:[3]})]),t[7]||(t[7]=d('<h2 id="_3-嵌套类型" tabindex="-1"><a class="header-anchor" href="#_3-嵌套类型"><span>3.嵌套类型</span></a></h2><h2 id="_4-list类型" tabindex="-1"><a class="header-anchor" href="#_4-list类型"><span>4.List类型</span></a></h2><h2 id="_5-浮点数" tabindex="-1"><a class="header-anchor" href="#_5-浮点数"><span>5.浮点数</span></a></h2>',3))])}const g=a(h,[["render",p]]),S=JSON.parse('{"path":"/guide/core/annotation-driven/data-types.html","title":"数据类型","lang":"zh-CN","frontmatter":{"date":"2024-03-10T00:00:00.000Z","icon":"list","description":"数据类型 1.整数类型 2.字符串类型 字符串长度 上面提到的整数类型，其大小(字节数)数是固定的。但是对字符串而言，必须手动指定其长度。 底层注解 提供了下面两个属性来指定字符串的长度： int length() : 指定固定的长度 String lengthExpression() : 通过 SpEL 表达式动态计算长度 字符串编码 编码: UTF...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-14T13:41:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xtream-codec\\",\\"url\\":\\"https://github.com/hylexus\\"}]}"],["meta",{"property":"og:url","content":"https://hylexus.github.io/xtream-codec/guide/core/annotation-driven/data-types.html"}],["meta",{"property":"og:site_name","content":"xtream-codec"}],["meta",{"property":"og:title","content":"数据类型"}],["meta",{"property":"og:description","content":"数据类型 1.整数类型 2.字符串类型 字符串长度 上面提到的整数类型，其大小(字节数)数是固定的。但是对字符串而言，必须手动指定其长度。 底层注解 提供了下面两个属性来指定字符串的长度： int length() : 指定固定的长度 String lengthExpression() : 通过 SpEL 表达式动态计算长度 字符串编码 编码: UTF..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-14T13:41:50.000Z"}],["meta",{"property":"article:published_time","content":"2024-03-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-14T13:41:50.000Z"}]]},"git":{"createdTime":1710065417000,"updatedTime":1734183710000,"contributors":[{"name":"hylexus","username":"","email":"hylexus@163.com","commits":3}]},"readingTime":{"minutes":0.88,"words":263},"filePathRelative":"guide/core/annotation-driven/data-types.md","excerpt":"\\n<h2>1.整数类型</h2>\\n<table>\\n<thead>\\n<tr>\\n<th>长度</th>\\n<th>符号位</th>\\n<th>JavaType</th>\\n<th>Rust风格注解</th>\\n<th>JT风格注解</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>1</td>\\n<td>无</td>\\n<td><code>byte/Byte</code></td>\\n<td><code>@Preset.RustStyle.u8</code></td>\\n<td><code>@Preset.JtStyle.Byte</code></td>\\n</tr>\\n<tr>\\n<td>1</td>\\n<td><em>有</em></td>\\n<td><code>short/Short</code></td>\\n<td><code>@Preset.RustStyle.i8</code></td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td>无</td>\\n<td><code>short/Short</code></td>\\n<td><code>@Preset.RustStyle.u16</code></td>\\n<td><code>@Preset.JtStyle.WORD</code></td>\\n</tr>\\n<tr>\\n<td>2</td>\\n<td><em>有</em></td>\\n<td><code>int/Integer</code></td>\\n<td><code>@Preset.RustStyle.i16</code></td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>4</td>\\n<td>无</td>\\n<td><code>int/Integer</code></td>\\n<td><code>@Preset.RustStyle.u32</code></td>\\n<td><code>@Preset.JtStyle.DWORD</code></td>\\n</tr>\\n<tr>\\n<td>4</td>\\n<td><em>有</em></td>\\n<td><code>long/Long</code></td>\\n<td><code>@Preset.RustStyle.i32</code></td>\\n<td>--</td>\\n</tr>\\n<tr>\\n<td>8</td>\\n<td>无</td>\\n<td><code>long/Long</code></td>\\n<td><code>@Preset.RustStyle.u64</code></td>\\n<td>--</td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{g as comp,S as data};
