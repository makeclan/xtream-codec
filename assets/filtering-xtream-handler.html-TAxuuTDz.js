import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a,o as t}from"./app-C8JBMu7V.js";const s="/xtream-codec/img/server/request-processing/filtering-xtream-handler.png",n={};function l(d,e){return t(),r("div",null,e[0]||(e[0]=[a('<h1 id="filteringxtreamhandler" tabindex="-1"><a class="header-anchor" href="#filteringxtreamhandler"><span>FilteringXtreamHandler</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li><code>FilteringXtreamHandler</code> 借鉴于 <code>org.springframework.web.server.handler.FilteringWebHandler</code>。</li><li><code>XtreamFilterChain</code> 借鉴于 <code>org.springframework.web.server.WebFilterChain</code>。</li><li><code>DefaultXtreamFilterChain</code> 借鉴于 <code>org.springframework.web.server.handler.DefaultWebFilterChain</code>。</li></ul></div><p>从名称可以看出来，<code>FilteringXtreamHandler</code> 本质上是一个 <code>XtreamHandler</code>，前缀 <code>Filtering</code> 表示该组件具有过滤器的功能。</p><p><code>FilteringXtreamHandler</code> 将请求委托给了 <code>XtreamFilterChain</code>。</p><p><code>XtreamFilterChain</code> 内部维护着一个 <code>XtreamHandler</code>(实际上是 <code>DispatcherXtreamHandler</code>) 和 一堆的 <code>XtreamFilter</code>。</p><figure><img src="'+s+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>下面是 <code>XtreamFilterChain</code> 的默认实现的属性依赖：</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DefaultXtreamFilterChain</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> implements</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> XtreamFilterChain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> List</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">XtreamFilter</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> allFilters</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> XtreamHandler</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> handler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // 实际上是 \`DispatcherXtreamHandler\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> XtreamFilter</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> currentFilter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> final</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DefaultXtreamFilterChain</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> chain</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>XtreamFilterChain</code> 的大体流程如下：</p><ul><li>挨个执行 <code>XtreamFilter filter</code><ul><li>如果某个 <code>filter</code> 返回 <code>Mono.empty()</code>，则流程就此终止</li><li>反之，则继续执行下一个 <code>filter</code></li></ul></li><li>等所有 <code>filter</code> 都执行完之后，将请求处理委托给 <code>DispatcherXtreamHandler</code></li></ul>`,11)]))}const p=i(n,[["render",l]]),c=JSON.parse('{"path":"/guide/server/request-processing/filtering-xtream-handler.html","title":"FilteringXtreamHandler","lang":"zh-CN","frontmatter":{"icon":"arrows-spin","article":false,"description":"FilteringXtreamHandler 介绍 提示 FilteringXtreamHandler 借鉴于 org.springframework.web.server.handler.FilteringWebHandler。 XtreamFilterChain 借鉴于 org.springframework.web.server.WebFilte...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"FilteringXtreamHandler\\",\\"description\\":\\"FilteringXtreamHandler 介绍 提示 FilteringXtreamHandler 借鉴于 org.springframework.web.server.handler.FilteringWebHandler。 XtreamFilterChain 借鉴于 org.springframework.web.server.WebFilte...\\"}"],["meta",{"property":"og:url","content":"https://hylexus.github.io/xtream-codec/guide/server/request-processing/filtering-xtream-handler.html"}],["meta",{"property":"og:site_name","content":"xtream-codec"}],["meta",{"property":"og:title","content":"FilteringXtreamHandler"}],["meta",{"property":"og:description","content":"FilteringXtreamHandler 介绍 提示 FilteringXtreamHandler 借鉴于 org.springframework.web.server.handler.FilteringWebHandler。 XtreamFilterChain 借鉴于 org.springframework.web.server.WebFilte..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://hylexus.github.io/xtream-codec/img/server/request-processing/filtering-xtream-handler.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-17T15:13:15.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-17T15:13:15.000Z"}]]},"git":{"createdTime":1734100399000,"updatedTime":1734448395000,"contributors":[{"name":"hylexus","username":"","email":"hylexus@163.com","commits":3}]},"readingTime":{"minutes":0.63,"words":190},"filePathRelative":"guide/server/request-processing/filtering-xtream-handler.md","excerpt":"\\n<h2>介绍</h2>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<ul>\\n<li><code>FilteringXtreamHandler</code> 借鉴于 <code>org.springframework.web.server.handler.FilteringWebHandler</code>。</li>\\n<li><code>XtreamFilterChain</code> 借鉴于 <code>org.springframework.web.server.WebFilterChain</code>。</li>\\n<li><code>DefaultXtreamFilterChain</code> 借鉴于 <code>org.springframework.web.server.handler.DefaultWebFilterChain</code>。</li>\\n</ul>\\n</div>","autoDesc":true}');export{p as comp,c as data};
