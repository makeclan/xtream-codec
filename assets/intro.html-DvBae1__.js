import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,a as c,b as p,w as e,r as u,o as b,d as n,e as t}from"./app-C8JBMu7V.js";const o={};function m(h,s){const i=u("Tabs");return b(),d("div",null,[s[6]||(s[6]=c('<h1 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h1><h2 id="部标-808-协议格式" tabindex="-1"><a class="header-anchor" href="#部标-808-协议格式"><span>部标 808 协议格式</span></a></h2><h3 id="消息结构" tabindex="-1"><a class="header-anchor" href="#消息结构"><span>消息结构</span></a></h3><table><thead><tr><th>标识位</th><th>消息头</th><th>消息体</th><th>校验码</th><th>标识位</th></tr></thead><tbody><tr><td>1 byte(固定为0x7E)</td><td><code>H</code> bytes</td><td><code>B</code> bytes</td><td>1 byte</td><td>1 byte(固定为0x7E)</td></tr></tbody></table><ul><li><code>H</code> 的取值情况如下： <ul><li><strong>V2011 / V2013</strong><ul><li>非分包消息: <strong>12</strong> bytes</li><li>分包消息: <strong>16</strong> bytes</li></ul></li><li><strong>V2019</strong><ul><li>非分包消息: <strong>17</strong> bytes</li><li>分包消息: <strong>21</strong> bytes</li></ul></li></ul></li><li><code>B</code> 的取值 <code>&gt;= 0</code>, 和具体消息类型相关 <ul><li>部分消息无消息体，比如：终端心跳消息</li></ul></li></ul><h3 id="消息头结构" tabindex="-1"><a class="header-anchor" href="#消息头结构"><span>消息头结构</span></a></h3><p>不同版本的消息头结构如下：</p>',7)),p(i,{data:[{id:"1"},{id:"2"},{id:"3"}],active:2},{title0:e(({value:l,isActive:a})=>s[0]||(s[0]=[t("V2011")])),title1:e(({value:l,isActive:a})=>s[1]||(s[1]=[t("V2013")])),title2:e(({value:l,isActive:a})=>s[2]||(s[2]=[t("V2019")])),tab0:e(({value:l,isActive:a})=>s[3]||(s[3]=[n("p",null,[n("s",null,[n("strong",null,"JT/T 808 V2011")]),t(" 已经废弃，消息体整体结构和 "),n("strong",null,"JT/T 808 V2013"),t(" 一致。")],-1)])),tab1:e(({value:l,isActive:a})=>s[4]||(s[4]=[n("div",{class:"language-text line-numbers-mode","data-highlighter":"shiki","data-ext":"text",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[n("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[n("code",{class:"language-text"},[n("span",{class:"line"},[n("span",null,"byte[0-2) 	消息ID word(16)")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[2-4) 	消息体属性 word(16)")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[0-10)	消息体长度")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[10-13)	数据加密方式")]),t(`
`),n("span",{class:"line"},[n("span",null,"						此三位都为 0,表示消息体不加密")]),t(`
`),n("span",{class:"line"},[n("span",null,"						第 10 位为 1,表示消息体经过 RSA 算法加密")]),t(`
`),n("span",{class:"line"},[n("span",null,"						其它保留")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[13]		分包")]),t(`
`),n("span",{class:"line"},[n("span",null,"						1: 消息体卫长消息,进行分包发送处理,具体分包信息由消息包封装项决定")]),t(`
`),n("span",{class:"line"},[n("span",null,"						0: 则消息头中无消息包封装项字段")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[14-15]	保留")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[4-10) 	终端手机号或设备ID bcd[6]")]),t(`
`),n("span",{class:"line"},[n("span",null,"        根据安装后终端自身的手机号转换")]),t(`
`),n("span",{class:"line"},[n("span",null,"        手机号不足12 位,则在前面补 0")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[10-12) 消息流水号 word(16)")]),t(`
`),n("span",{class:"line"},[n("span",null,"        按发送顺序从 0 开始循环累加")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[12-16) 	消息包封装项")]),t(`
`),n("span",{class:"line"},[n("span",null,"        如果消息体属性中相关标识位确定消息分包处理,则该项有内容")]),t(`
`),n("span",{class:"line"},[n("span",null,"        否则无该项")]),t(`
`),n("span",{class:"line"},[n("span",null,"        byte[0-2)	消息包总数(word(16)) 该消息分包后得总包数")]),t(`
`),n("span",{class:"line"},[n("span",null,"        byte[2-4)	包序号(word(16))  从 1 开始")])])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),tab2:e(({value:l,isActive:a})=>s[5]||(s[5]=[n("div",{class:"language-text line-numbers-mode","data-highlighter":"shiki","data-ext":"text",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[n("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[n("code",{class:"language-text"},[n("span",{class:"line"},[n("span",null,"byte[0-2) 	消息ID word(16)")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[2-4) 	消息体属性 word(16)")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[0-10)	消息体长度")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[10-13)	数据加密方式")]),t(`
`),n("span",{class:"line"},[n("span",null,"						此三位都为 0,表示消息体不加密")]),t(`
`),n("span",{class:"line"},[n("span",null,"						第 10 位为 1,表示消息体经过 RSA 算法加密")]),t(`
`),n("span",{class:"line"},[n("span",null,"						其它保留")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[13]		分包")]),t(`
`),n("span",{class:"line"},[n("span",null,"						1: 消息体卫长消息,进行分包发送处理,具体分包信息由消息包封装项决定")]),t(`
`),n("span",{class:"line"},[n("span",null,"						0: 则消息头中无消息包封装项字段")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[14]	    版本标识")]),t(`
`),n("span",{class:"line"},[n("span",null,"		bit[15]	保留")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[4]     协议版本号")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[5-15) 	终端手机号或设备ID bcd[10]")]),t(`
`),n("span",{class:"line"},[n("span",null,"		根据安装后终端自身的手机号转换")]),t(`
`),n("span",{class:"line"},[n("span",null,"		手机号不足12 位,则在前面补 0")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[15-17) 	消息流水号 word(16)")]),t(`
`),n("span",{class:"line"},[n("span",null,"		按发送顺序从 0 开始循环累加")]),t(`
`),n("span",{class:"line"},[n("span",null,"byte[17-21) 	消息包封装项")]),t(`
`),n("span",{class:"line"},[n("span",null,"        如果消息体属性中相关标识位确定消息分包处理,则该项有内容")]),t(`
`),n("span",{class:"line"},[n("span",null,"		否则无该项")]),t(`
`),n("span",{class:"line"},[n("span",null,"		byte[0-2)	消息包总数(word(16)) 该消息分包后得总包数")]),t(`
`),n("span",{class:"line"},[n("span",null,"		byte[2-4)	包序号(word(16))  从 1 开始")])])]),n("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1)])),_:1})])}const g=r(o,[["render",m]]),x=JSON.parse('{"path":"/ext/jt/jt808/quick-start/intro.html","title":"介绍","lang":"zh-CN","frontmatter":{"icon":"circle-info","article":false,"description":"介绍 部标 808 协议格式 消息结构 H 的取值情况如下： V2011 / V2013 非分包消息: 12 bytes 分包消息: 16 bytes V2019 非分包消息: 17 bytes 分包消息: 21 bytes B 的取值 >= 0, 和具体消息类型相关 部分消息无消息体，比如：终端心跳消息 消息头结构 不同版本的消息头结构如下：","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"介绍\\",\\"description\\":\\"介绍 部标 808 协议格式 消息结构 H 的取值情况如下： V2011 / V2013 非分包消息: 12 bytes 分包消息: 16 bytes V2019 非分包消息: 17 bytes 分包消息: 21 bytes B 的取值 >= 0, 和具体消息类型相关 部分消息无消息体，比如：终端心跳消息 消息头结构 不同版本的消息头结构如下：\\"}"],["meta",{"property":"og:url","content":"https://hylexus.github.io/xtream-codec/ext/jt/jt808/quick-start/intro.html"}],["meta",{"property":"og:site_name","content":"xtream-codec"}],["meta",{"property":"og:title","content":"介绍"}],["meta",{"property":"og:description","content":"介绍 部标 808 协议格式 消息结构 H 的取值情况如下： V2011 / V2013 非分包消息: 12 bytes 分包消息: 16 bytes V2019 非分包消息: 17 bytes 分包消息: 21 bytes B 的取值 >= 0, 和具体消息类型相关 部分消息无消息体，比如：终端心跳消息 消息头结构 不同版本的消息头结构如下："}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-14T13:41:50.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-14T13:41:50.000Z"}]]},"git":{"createdTime":1734183710000,"updatedTime":1734183710000,"contributors":[{"name":"hylexus","username":"","email":"hylexus@163.com","commits":1}]},"readingTime":{"minutes":2.37,"words":711},"filePathRelative":"ext/jt/jt808/quick-start/intro.md","excerpt":"\\n<h2>部标 808 协议格式</h2>\\n<h3>消息结构</h3>\\n<table>\\n<thead>\\n<tr>\\n<th>标识位</th>\\n<th>消息头</th>\\n<th>消息体</th>\\n<th>校验码</th>\\n<th>标识位</th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>1 byte(固定为0x7E)</td>\\n<td><code>H</code> bytes</td>\\n<td><code>B</code> bytes</td>\\n<td>1 byte</td>\\n<td>1 byte(固定为0x7E)</td>\\n</tr>\\n</tbody>\\n</table>\\n","autoDesc":true}');export{g as comp,x as data};
